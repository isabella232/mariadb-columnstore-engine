#!/bin/bash
#
# $Id: post-install 3705 2013-08-07 19:47:20Z dhill $
#
# Post-install steps for columnstore install

rpmmode=install
user=`whoami 2>/dev/null`

quiet=0

if [ -f @ENGINE_SYSCONFDIR@/columnstore/storagemanager.cnf.rpmsave ]; then
    /bin/cp -f @ENGINE_SYSCONFDIR@/columnstore/storagemanager.cnf @ENGINE_SYSCONFDIR@/columnstore/storagemanager.cnf.new
    /bin/cp -f @ENGINE_SYSCONFDIR@/columnstore/storagemanager.cnf.rpmsave @ENGINE_SYSCONFDIR@/columnstore/storagemanager.cnf
fi

touch /dev/shm/columnstore-test && rm /dev/shm/columnstore-test
if [ $? -ne 0 ] ; then
    echo "User $user will need R/W access to /dev/shm."
    exit 1
fi

profileFile="/etc/profile.d/columnstoreAlias.sh"
/bin/cp -f @ENGINE_SUPPORTDIR@/columnstoreAlias /etc/profile.d/columnstoreAlias.sh
chmod 644 /etc/profile.d/columnstoreAlias.sh >/dev/null 2>&1

# set Profile File in config file
mcsSetConfig -d Installation ProfileFile $profileFile

test -d /var/log/mariadb/columnstore || mkdir -p /var/log/mariadb/columnstore >/dev/null 2>&1
test -d /var/log/mariadb/columnstore/archive || mkdir /var/log/mariadb/columnstore/archive >/dev/null 2>&1
test -d /var/log/mariadb/columnstore/corefiles || mkdir /var/log/mariadb/columnstore/corefiles >/dev/null 2>&1
test -d /var/log/mariadb/columnstore/trace || mkdir /var/log/mariadb/columnstore/trace >/dev/null 2>&1
test -h /var/log/mariadb/columnstore/data && rm -f /var/log/mariadb/columnstore/data
chmod 755 /var/log/mariadb/columnstore/corefiles > /dev/null 2>&1

# make sure trace dir is world-writable and sticky
test -d /var/lib/columnstore/data || mkdir -p /var/lib/columnstore/data
test -d /var/lib/columnstore/data1/systemFiles/dbrm || mkdir -p /var/lib/columnstore/data1/systemFiles/dbrm
test -d /var/lib/columnstore/local || mkdir -p /var/lib/columnstore/local
test -d /var/lib/columnstore/data1/systemFiles/dataTransaction || rmdir /var/lib/columnstore/data1/systemFiles/dataTransaction >/dev/null 2>&1
test -d /var/lib/columnstore/data1/systemFiles/dataTransaction/archive || rmdir /var/lib/columnstore/data1/systemFiles/dataTransaction/archive >/dev/null 2>&1
chmod 1755 /var/lib/columnstore/data1 >/dev/null 2>&1
chmod -R 1755 /var/lib/columnstore/data1/systemFiles >/dev/null 2>&1
chmod 1755 @ENGINE_SYSCONFDIR@/columnstore > /dev/null 2>&1

#create the bulk-load dirs
mkdir -p /var/lib/columnstore/data/bulk/data/import >/dev/null 2>&1
mkdir -p /var/lib/columnstore/data/bulk/log >/dev/null 2>&1
mkdir -p /var/lib/columnstore/data/bulk/job >/dev/null 2>&1
mkdir -p /var/lib/columnstore/data/bulk/rollback >/dev/null 2>&1
mkdir -p /var/lib/columnstore/data/bulk/tmpjob >/dev/null 2>&1
rm -f /var/lib/columnstore/data/bulk/tmpjob/* >/dev/null 2>&1

#get temp base directory
tmpDir="/tmp"
#get columnstore temp file directory name
tmpDir=/tmp/columnstore_tmp_files
mkdir $tmpDir >/dev/null 2>&1
chmod 664 $tmpDir

#create mount directories
mkdir /mnt/tmp > /dev/null 2>&1

#check and create rc.local file if missing
if [ -f /etc/rc.d ]; then
    RCFILE=/etc/rc.d/rc.local
else
    RCFILE=/etc/rc.local
fi

if [ $user = "root" ]; then
    touch $RCFILE    
    chmod +x $RCFILE
else
    printf '%s\n' '#!/bin/bash' "#" | tee -a $RCFILE > /dev/null 2>&1
fi

if [ $user = "root" ]; then
	#setup the columnstore service script
	rm -f /etc/init.d/columnstore >/dev/null 2>&1
	rm -f /etc/default/columnstore

	systemctl=`which systemctl 2>/dev/null`
	if [ -n "$systemctl" ]; then
		cp @ENGINE_SUPPORTDIR@/mariadb-columnstore.service /usr/lib/systemd/system/. >/dev/null 2>&1
		cp @ENGINE_SUPPORTDIR@/mariadb-columnstore.service /lib/systemd/system/. >/dev/null 2>&1
		cp @ENGINE_SUPPORTDIR@/mcs-controllernode.service /usr/lib/systemd/system/. >/dev/null 2>&1
		cp @ENGINE_SUPPORTDIR@/mcs-controllernode.service /lib/systemd/system/. >/dev/null 2>&1
		cp @ENGINE_SUPPORTDIR@/mcs-ddlproc.service /usr/lib/systemd/system/. >/dev/null 2>&1
		cp @ENGINE_SUPPORTDIR@/mcs-ddlproc.service /lib/systemd/system/. >/dev/null 2>&1
		cp @ENGINE_SUPPORTDIR@/mcs-dmlproc.service /usr/lib/systemd/system/. >/dev/null 2>&1
		cp @ENGINE_SUPPORTDIR@/mcs-dmlproc.service /lib/systemd/system/. >/dev/null 2>&1
		cp @ENGINE_SUPPORTDIR@/mcs-exemgr.service /usr/lib/systemd/system/. >/dev/null 2>&1
		cp @ENGINE_SUPPORTDIR@/mcs-exemgr.service /lib/systemd/system/. >/dev/null 2>&1
		cp @ENGINE_SUPPORTDIR@/mcs-primproc.service /usr/lib/systemd/system/. >/dev/null 2>&1
		cp @ENGINE_SUPPORTDIR@/mcs-primproc.service /lib/systemd/system/. >/dev/null 2>&1
		cp @ENGINE_SUPPORTDIR@/mcs-workernode.service /usr/lib/systemd/system/. >/dev/null 2>&1
		cp @ENGINE_SUPPORTDIR@/mcs-workernode.service /lib/systemd/system/. >/dev/null 2>&1
		cp @ENGINE_SUPPORTDIR@/mcs-writeengineserver.service /usr/lib/systemd/system/. >/dev/null 2>&1
		cp @ENGINE_SUPPORTDIR@/mcs-writeengineserver.service /lib/systemd/system/. >/dev/null 2>&1
		cp @ENGINE_SUPPORTDIR@/mcs-loadbrm.service /usr/lib/systemd/system/. >/dev/null 2>&1
		cp @ENGINE_SUPPORTDIR@/mcs-loadbrm.service /lib/systemd/system/. >/dev/null 2>&1

		systemctl enable mariadb-columnstore >/dev/null 2>&1
		systemctl enable mcs-controllernode > /dev/null 2>&1
		systemctl enable mcs-ddlproc > /dev/null 2>&1
		systemctl enable mcs-dmlproc > /dev/null 2>&1
		systemctl enable mcs-exemgr > /dev/null 2>&1
		systemctl enable mcs-primproc > /dev/null 2>&1
		systemctl enable mcs-workernode > /dev/null 2>&1
		systemctl enable mcs-writeengineserver > /dev/null 2>&1
		systemctl enable mcs-loadbrm > /dev/null 2>&1
	else
		chkconfig=`which chkconfig 2>/dev/null`
		if [ -n "$chkconfig" ]; then

			cp @ENGINE_SBINDIR@/columnstore /etc/init.d/. >/dev/null 2>&1
			chkconfig --add columnstore > /dev/null 2>&1
			chkconfig columnstore on > /dev/null 2>&1
		else
			cp @ENGINE_SBINDIR@/columnstore /etc/init.d/. >/dev/null 2>&1
			updaterc=`which update-rc.d 2>/dev/null`
			if [ -n "$updaterc" ]; then

				update-rc.d columnstore defaults 99 > /dev/null 2>&1
			else
				echo ""
				echo "Package 'systemctl', 'chkconfig' or 'update-rc.d' not installed, contact your sysadmin if you want to setup to autostart for columnstore"	
			fi
		fi
	fi
fi

if [ $user = "root" ]; then
	columnstoreSyslogSetup.sh install > $tmpDir/syslog_install.log 2>&1

	#check if MariaDB Columnstore system logging was setup
	cat $tmpDir/syslog_install.log | grep 'No System Logging' >/dev/null 2>&1
	if [ $? -eq 0 ]; then
	    cat $tmpDir/syslog_install.log
	fi
else
	chown $user:$user @ENGINE_SYSCONFDIR@/columnstore/Columnstore.xml
	
cat <<EOD

NOTE: For non-root install, you will need to run the following commands as root user to
      setup the MariaDB ColumnStore System Logging

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH
columnstoreSyslogSetup.sh --user=$user install
      
      
EOD
fi

#determine lock file directory

# Lock directory for root user
lockdir='/var/lock/subsys'

mcsSetConfig -d Installation LockFileDirectory $lockdir

mkdir $lockdir >/dev/null 2>&1

rm -f $lockdir/columnstore

#check and get amazon env variables
aws=`which aws 2>/dev/null`
if [ -z "aws" ]; then
	MCSgetCredentials.sh >/dev/null 2>&1
fi

postConfigure
systemctl start mariadb-columnstore

while  [ -z  $(pgrep -x controllernode) ];
do
    sleep 2
done
 
dbbuilder 7 > $tmpDir/dbbuilder.log
exit 0

